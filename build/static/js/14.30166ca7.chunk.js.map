{"version":3,"sources":["components/layout/AdminLayout.js","components/ListCol.js","components/button/EditButton.js","modAdmin/user/UserList.js"],"names":["AdminLayout","children","className","ListHeader","label","ListCol","value","EditButton","path","history","useHistory","onClick","push","size","UserList","useGetData","list","data","error","isLoading","isError","message","map","item","fullName","email","src","avater","alt","role","id"],"mappings":"+HAAA,kCAsBeA,IAlBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,qBAAKC,UAAU,+CAAf,SACE,sBAAKA,UAAU,oEAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,MAEF,sBAAKA,UAAU,2EAAf,UACE,cAAC,IAAD,IACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,uBAAf,SAAuCD,gB,iCCdnD,oFAEaE,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3B,OACE,qBAAKF,UAAU,gCAAf,SACE,sBAAMA,UAAU,2BAAhB,SAA4CE,OAKrCC,EAAU,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,MAC/B,OACE,sBAAKJ,UAAU,GAAf,UACE,sBAAMA,UAAU,kDAAhB,SACGE,IAEH,sBAAMF,UAAU,cAAhB,SAA+BI,S,iCChBrC,gCAaeC,IATI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAUC,cAChB,OACE,wBAAQR,UAAU,WAAWS,QAAS,kBAAMF,EAAQG,KAAKJ,IAAzD,SACE,cAAC,IAAD,CAAQK,KAAM,S,iCCRpB,2EAyEeC,UAjEE,WACf,MAKIC,YAAW,QAAS,cAJhBC,EADR,EACEC,KACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,QAGF,OAAID,EAEA,cAAC,IAAD,UACE,cAAC,IAAD,MAIFC,EAEA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,QAASH,EAAMG,YAK1B,cAAC,IAAD,UACE,qBAAKnB,UAAU,8BAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,cAAC,IAAD,CAAYE,MAAM,aAClB,cAAC,IAAD,CAAYA,MAAM,UAClB,cAAC,IAAD,CAAYA,MAAM,WAClB,cAAC,IAAD,CAAYA,MAAM,SAClB,cAAC,IAAD,CAAYA,MAAM,cAEnBY,EAAKC,KAAKK,KAAI,SAACC,GAAD,OACb,sBAEErB,UAAU,4CAFZ,UAIE,cAAC,IAAD,CAASE,MAAM,cAAcE,MAAOiB,EAAKC,WACzC,cAAC,IAAD,CAASpB,MAAM,WAAWE,MAAOiB,EAAKE,QACtC,sBAAKvB,UAAU,GAAf,UACE,sBAAMA,UAAU,kDAAhB,sBAGA,qBACEwB,IAAKH,EAAKI,OACVC,IAAKL,EAAKC,SACVtB,UAAU,6BAGd,cAAC,IAAD,CAASE,MAAM,UAAUE,MAAOiB,EAAKM,OACrC,8BACE,qBAAK3B,UAAU,+BAAf,SACE,cAAC,IAAD,CAAYM,KAAI,gCAA2Be,EAAKO,YAlB/CP,EAAKO","file":"static/js/14.30166ca7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\n\r\nconst AdminLayout = ({ children }) => {\r\n  return (\r\n    <div className=\"w-screen h-screen text-white overflow-hidden\">\r\n      <div className=\"grid xl:grid-cols-layout w-full h-screen max-w-screen-3xl mx-auto\">\r\n        <div className=\"hidden xl:block\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"grid grid-rows-layout w-full h-screen overflow-hidden bg-light text-dark\">\r\n          <Header />\r\n          <div className=\"overflow-y-auto\">\r\n            <div className=\"grid grid-cols-1 p-4\">{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import React from \"react\";\r\n\r\nexport const ListHeader = ({ label }) => {\r\n  return (\r\n    <div className=\"flex justify-start capitalize\">\r\n      <span className=\"font-semibold capitalize\">{label}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ListCol = ({ label, value }) => {\r\n  return (\r\n    <div className=\"\">\r\n      <span className=\"inline-block capitalize md:hidden font-semibold\">\r\n        {label}\r\n      </span>\r\n      <span className=\"break-words\">{value}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst EditButton = ({ path }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <button className=\"btn-edit\" onClick={() => history.push(path)}>\r\n      <FiEdit size={16} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default EditButton;\r\n","import React from \"react\";\r\nimport EditButton from \"../../components/button/EditButton\";\r\nimport Error from \"../../components/Error\";\r\nimport AdminLayout from \"../../components/layout/AdminLayout\";\r\nimport { ListCol, ListHeader } from \"../../components/ListCol\";\r\nimport { HashLoading } from \"../../components/Loading\";\r\nimport { useGetData } from \"../../hooks/dataApi\";\r\n\r\nconst UserList = () => {\r\n  const {\r\n    data: list,\r\n    error,\r\n    isLoading,\r\n    isError,\r\n  } = useGetData(\"users\", \"/user-list\");\r\n\r\n  if (isLoading)\r\n    return (\r\n      <AdminLayout>\r\n        <HashLoading />\r\n      </AdminLayout>\r\n    );\r\n\r\n  if (isError)\r\n    return (\r\n      <AdminLayout>\r\n        <Error message={error.message} />\r\n      </AdminLayout>\r\n    );\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"card w-full max-w-screen-xl\">\r\n        <div className=\"list-wrapper\">\r\n          <div className=\"md:grid grid-cols-5 list-header\">\r\n            <ListHeader label=\"Username\" />\r\n            <ListHeader label=\"Email\" />\r\n            <ListHeader label=\"Avater\" />\r\n            <ListHeader label=\"Role\" />\r\n            <ListHeader label=\"Action\" />\r\n          </div>\r\n          {list.data.map((item) => (\r\n            <div\r\n              key={item.id}\r\n              className=\"grid grid-cols-1 md:grid-cols-5 list-body\"\r\n            >\r\n              <ListCol label=\"Username : \" value={item.fullName} />\r\n              <ListCol label=\"Email : \" value={item.email} />\r\n              <div className=\"\">\r\n                <span className=\"inline-block capitalize md:hidden font-semibold\">\r\n                  Avater :\r\n                </span>\r\n                <img\r\n                  src={item.avater}\r\n                  alt={item.fullName}\r\n                  className=\"w-10 h-10 rounde-full\"\r\n                />\r\n              </div>\r\n              <ListCol label=\"Role : \" value={item.role} />\r\n              <div>\r\n                <div className=\"flex justify-start space-x-2\">\r\n                  <EditButton path={`/admin/user-list/edit/${item.id}`} />\r\n                  {/* <DeleteButton action={refetch} path={`/product/${item.id}`} /> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"sourceRoot":""}
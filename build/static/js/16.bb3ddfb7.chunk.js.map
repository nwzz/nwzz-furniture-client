{"version":3,"sources":["components/layout/AdminLayout.js","components/TopHeader.js","components/button/SaveButton.js","modAdmin/user/UserForm.js","modAdmin/user/UserEdit.js"],"names":["AdminLayout","children","className","TopHeader","title","btnSave","path","history","useHistory","onClick","push","size","SaveButton","btnText","disabled","isRow","type","envRole","process","UserForm","defaultValues","action","returnPath","useState","submitting","setSubmitting","mutateAsync","usePostData","useForm","register","handleSubmit","onSubmit","formData","a","status","toast","success","response","error","data","message","request","Input","name","label","value","UserEdit","id","useParams","useGetData","list","isLoading","isError","refetch","Error","fullName","avater","email","role"],"mappings":"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","file":"static/js/16.bb3ddfb7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Header from \"./header/Header\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\n\r\nconst AdminLayout = ({ children }) => {\r\n  return (\r\n    <div className=\"w-screen h-screen text-white overflow-hidden\">\r\n      <div className=\"grid xl:grid-cols-layout w-full h-screen max-w-screen-3xl mx-auto\">\r\n        <div className=\"hidden xl:block\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"grid grid-rows-layout w-full h-screen overflow-hidden bg-light text-dark\">\r\n          <Header />\r\n          <div className=\"overflow-y-auto\">\r\n            <div className=\"grid grid-cols-1 p-4\">{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\n\r\nconst TopHeader = ({ title, btnSave, path = \"\" }) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"flex justify-between px-0 pb-2\">\r\n      <h1 className=\"text-2xl font-medium\">{title}</h1>\r\n      {btnSave ? (\r\n        <button\r\n          className=\"btn-header text-dark\"\r\n          onClick={() => history.push(path)}\r\n        >\r\n          <FaPlusCircle size={36} />\r\n        </button>\r\n      ) : (\r\n        <button\r\n          className=\"btn-header text-danger\"\r\n          onClick={() => history.push(path)}\r\n        >\r\n          <BsFillXCircleFill size={36} />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopHeader;\r\n","import React from \"react\";\r\n\r\nconst SaveButton = ({ btnText, disabled, isRow = true }) => {\r\n  return (\r\n    <div className={isRow ? \"form-row w-full\" : \"md:mt-6\"}>\r\n      <button type=\"submit\" className=\"btn-orange\" disabled={disabled}>\r\n        {btnText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaveButton;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SaveButton from \"../../components/button/SaveButton\";\r\nimport Input from \"../../components/Input\";\r\nimport { usePostData } from \"../../hooks/dataApi\";\r\n\r\nconst envRole = process.env.REACT_APP_ROLE;\r\n\r\nconst UserForm = ({ defaultValues, action, btnText, path, returnPath }) => {\r\n  const history = useHistory();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const { mutateAsync } = usePostData();\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: defaultValues,\r\n  });\r\n\r\n  const onSubmit = async (formData) => {\r\n    setSubmitting(true);\r\n    try {\r\n      const { status } = await mutateAsync({\r\n        path: path,\r\n        formData: formData,\r\n      });\r\n      if (status === 204) {\r\n        toast.success(\"Update Successfully\");\r\n        history.push(returnPath);\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        toast.error(\"Response : \" + error.response.data.message);\r\n      } else if (error.request) {\r\n        toast.error(\"Request : \" + error.message);\r\n      } else {\r\n        toast.error(\"Error :\", error.message);\r\n      }\r\n    } finally {\r\n      action();\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Input\r\n        name=\"fullName\"\r\n        type=\"text\"\r\n        label=\"Username\"\r\n        register={register}\r\n        disabled={true}\r\n      />\r\n      <Input\r\n        name=\"email\"\r\n        type=\"email\"\r\n        label=\"Email\"\r\n        register={register}\r\n        disabled={true}\r\n      />\r\n      <select\r\n        className=\"w-full h-10 px-3 my-3 capitalize bg-gray-200\"\r\n        {...register(\"role\")}\r\n      >\r\n        <option className=\"capitalize\">--Select--</option>\r\n        <option className=\"capitalize\" value={envRole}>\r\n          {envRole}\r\n        </option>\r\n        <option className=\"capitalize\" value=\"user\">\r\n          User\r\n        </option>\r\n      </select>\r\n      <SaveButton btnText={btnText} disabled={submitting} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Error from \"../../components/Error\";\r\nimport AdminLayout from \"../../components/layout/AdminLayout\";\r\nimport { HashLoading } from \"../../components/Loading\";\r\nimport TopHeader from \"../../components/TopHeader\";\r\nimport { useGetData } from \"../../hooks/dataApi\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nconst UserEdit = () => {\r\n  const { id } = useParams();\r\n  const {\r\n    data: list,\r\n    error,\r\n    isLoading,\r\n    isError,\r\n    refetch,\r\n  } = useGetData(\"users\", `/user/${id}`);\r\n\r\n  if (isLoading)\r\n    return (\r\n      <AdminLayout>\r\n        <HashLoading />\r\n      </AdminLayout>\r\n    );\r\n\r\n  if (isError)\r\n    return (\r\n      <AdminLayout>\r\n        <Error message={error.message} />\r\n      </AdminLayout>\r\n    );\r\n\r\n  const defaultValues = {\r\n    fullName: list.data.fullName,\r\n    avater: list.data.avater,\r\n    email: list.data.email,\r\n    role: list.data.role,\r\n  };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <div className=\"card w-full max-w-screen-xl\">\r\n        <TopHeader title=\"User Edit\" btnSave={false} path=\"/admin/user-list\" />\r\n        <UserForm\r\n          defaultValues={defaultValues}\r\n          action={refetch}\r\n          btnText=\"Edit\"\r\n          path={`/user/edit/${id}`}\r\n          returnPath=\"/admin/user-list\"\r\n        />\r\n      </div>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default UserEdit;\r\n"],"sourceRoot":""}
{"version":3,"sources":["modUser/Menubar.js","modCheckout/billingDetails/BillingDetails.js","modCheckout/shippingAddress/ShippingAddress.js","components/button/SecondaryButton.js","modUser/userAddress/UserAddressForm.js","modUser/userAddress/UserAddress.js"],"names":["Menubar","className","userData","length","map","item","index","activeClassName","to","label","BillingDetails","register","errors","firstName","lastName","country","streetAddress","city","phone","email","name","type","placeholder","errorMessage","message","ShippingAddress","show","useState","expanded","setExpanded","shippingFirstName","shippingLastName","shippingCountry","shippingStreetAddress","shippingCity","shippingDistrict","id","onChange","htmlFor","SecondaryButton","btnText","disabled","schema","yup","shape","required","min","max","matches","UserAddressForm","defaultValues","mutateAsync","usePostData","submitting","setSubmitting","useForm","resolver","yupResolver","handleSubmit","reset","formState","onSubmit","data","a","billingDetails","companyName","apartment","state","shippingAddress","shippingCompanyName","shippingApartment","district","postalCode","shippingPostalCode","orderNotes","shippingOrderNotes","formData","path","status","toast","success","response","error","request","UserAddress","useGetData","list","isLoading","isError","Layout","Error"],"mappings":"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","file":"static/js/12.108fbe60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { userData } from \"../data/header\";\r\n\r\nconst Menubar = () => {\r\n  return (\r\n    <div className=\"text-darker\">\r\n      {userData.length > 0 &&\r\n        userData.map((item, index) => (\r\n          <div key={index}>\r\n            <NavLink\r\n              className=\"my-2 pr-5 py-1 lg:block\"\r\n              activeClassName=\"text-red-500\"\r\n              to={item.to}\r\n            >\r\n              <span className=\"text-sm font-medium\">{item.label}</span>\r\n            </NavLink>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menubar;\r\n","import React from \"react\";\r\nimport Input from \"../../components/Input\";\r\n\r\nconst BillingDetails = ({ register, errors }) => {\r\n  const { firstName, lastName, country, streetAddress, city, phone, email } =\r\n    errors;\r\n\r\n  return (\r\n    <div className=\"form-col\">\r\n      <p className=\"font-medium text-gray-700\">BILLING DETAILS</p>\r\n      <div className=\"grid grid-cols-2 gap-x-8\">\r\n        <Input\r\n          name=\"firstName\"\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          label=\"First Name\"\r\n          register={register}\r\n          errorMessage={firstName?.message}\r\n        />\r\n        <Input\r\n          name=\"lastName\"\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          label=\"Last Name\"\r\n          register={register}\r\n          errorMessage={lastName?.message}\r\n        />\r\n      </div>\r\n      <Input\r\n        name=\"companyName\"\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        label=\"Company Name(Optional)\"\r\n        register={register}\r\n      />\r\n      <Input\r\n        name=\"country\"\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        label=\"COUNTRY / REGION\"\r\n        register={register}\r\n        errorMessage={country?.message}\r\n      />\r\n      <Input\r\n        name=\"streetAddress\"\r\n        type=\"text\"\r\n        placeholder=\"House number & street name\"\r\n        label=\"STREET ADDRESS\"\r\n        register={register}\r\n        errorMessage={streetAddress?.message}\r\n      />\r\n      <Input\r\n        name=\"apartment\"\r\n        type=\"text\"\r\n        placeholder=\"Apartment, suite, unit, etc. (optional)\"\r\n        register={register}\r\n      />\r\n      <Input\r\n        name=\"city\"\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        label=\"TOWN / CITY\"\r\n        register={register}\r\n        errorMessage={city?.message}\r\n      />\r\n      <Input\r\n        name=\"state\"\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        label=\"STATE / COUNTRY(OPTIONAL)\"\r\n        register={register}\r\n      />\r\n      <Input\r\n        name=\"phone\"\r\n        type=\"text\"\r\n        placeholder=\"\"\r\n        label=\"PHONE\"\r\n        register={register}\r\n        errorMessage={phone?.message}\r\n      />\r\n      <Input\r\n        name=\"email\"\r\n        type=\"email\"\r\n        placeholder=\"\"\r\n        label=\"EMAIL ADDRESS\"\r\n        register={register}\r\n        errorMessage={email?.message}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BillingDetails;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/Input\";\r\n\r\nconst ShippingAddress = ({ register, errors, show }) => {\r\n  const [expanded, setExpanded] = useState(show);\r\n  const {\r\n    shippingFirstName,\r\n    shippingLastName,\r\n    shippingCountry,\r\n    shippingStreetAddress,\r\n    shippingCity,\r\n    shippingDistrict,\r\n  } = errors;\r\n\r\n  return (\r\n    <div className=\"form-col relative\">\r\n      <div className=\"flex items-center gap-x-2 absolute -top-5\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"shippingAddress\"\r\n          className=\"cursor-pointer\"\r\n          onChange={() => setExpanded(!expanded)}\r\n        />\r\n        <label\r\n          className=\"font-medium text-gray-700 cursor-pointer\"\r\n          htmlFor=\"shippingAddress\"\r\n        >\r\n          SHIP TO A DIFFERENT ADDRESS?\r\n        </label>\r\n      </div>\r\n      {expanded && (\r\n        <>\r\n          <div className=\"mt-5 grid grid-cols-2 gap-x-8\">\r\n            <Input\r\n              name=\"shippingFirstName\"\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              label=\"First Name\"\r\n              register={register}\r\n              errorMessage={shippingFirstName?.message}\r\n            />\r\n            <Input\r\n              name=\"shippingLastName\"\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              label=\"Last Name\"\r\n              register={register}\r\n              errorMessage={shippingLastName?.message}\r\n            />\r\n          </div>\r\n          <Input\r\n            name=\"shippingCompanyName\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            label=\"Company Name(Optional)\"\r\n            register={register}\r\n          />\r\n          <Input\r\n            name=\"shippingCountry\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            label=\"COUNTRY / REGION\"\r\n            register={register}\r\n            errorMessage={shippingCountry?.message}\r\n          />\r\n          <Input\r\n            name=\"shippingStreetAddress\"\r\n            type=\"text\"\r\n            placeholder=\"House number & street name\"\r\n            label=\"STREET ADDRESS\"\r\n            register={register}\r\n            errorMessage={shippingStreetAddress?.message}\r\n          />\r\n          <Input\r\n            name=\"shippingApartment\"\r\n            type=\"text\"\r\n            placeholder=\"Apartment, suite, unit, etc. (optional)\"\r\n            register={register}\r\n          />\r\n          <Input\r\n            name=\"shippingCity\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            label=\"TOWN / CITY\"\r\n            register={register}\r\n            errorMessage={shippingCity?.message}\r\n          />\r\n          <Input\r\n            name=\"shippingDistrict\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            label=\"DISTRICT\"\r\n            register={register}\r\n            errorMessage={shippingDistrict?.message}\r\n          />\r\n          <Input\r\n            name=\"shippingPostalCode\"\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            label=\"POSTAL / ZIP CODE(OPTIONAL)\"\r\n            register={register}\r\n          />\r\n          {!show && (\r\n            <div className=\"form-row\">\r\n              <label className=\"pb-0.5 text-gray-600 font-medium text-xs uppercase\">\r\n                ORDER NOTES (OPTIONAL)\r\n              </label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control input-border-primary \"\r\n                placeholder=\"\"\r\n                {...register(\"shippingOrderNotes\")}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingAddress;\r\n","import React from \"react\";\r\n\r\nconst SecondaryButton = ({ btnText, type, disabled }) => {\r\n  return (\r\n    <button\r\n      className={`mt-5 w-full text-center btn-secondary ${\r\n        disabled && \"cursor-not-allowed\"\r\n      }`}\r\n      type={type}\r\n      disabled={disabled}\r\n    >\r\n      {btnText}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SecondaryButton;\r\n","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { usePostData } from \"../../hooks/dataApi\";\r\nimport { useState } from \"react\";\r\nimport SecondaryButton from \"../../components/button/SecondaryButton\";\r\nimport toast from \"react-hot-toast\";\r\nimport BillingDetails from \"../../modCheckout/billingDetails/BillingDetails\";\r\nimport ShippingAddress from \"../../modCheckout/shippingAddress/ShippingAddress\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup.string().required(\"First name is required\").min(4).max(10),\r\n  lastName: yup.string().required(\"Last name is required\").min(4).max(10),\r\n  country: yup.string().required(\"Country is required\"),\r\n  streetAddress: yup.string().required(\"Street address is required\"),\r\n  city: yup.string().required(\"City is required\"),\r\n  phone: yup\r\n    .string()\r\n    .required(\"Phone is required\")\r\n    .matches(phoneRegExp, \"Phone number is not valid\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"Please enter a valid email address.\")\r\n    .required(\"Email is required\"),\r\n});\r\n\r\nconst UserAddressForm = ({ defaultValues }) => {\r\n  const { mutateAsync } = usePostData();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: defaultValues,\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    const billingDetails = {\r\n      firstName: data.firstName,\r\n      lastName: data.lastName,\r\n      companyName: data.companyName,\r\n      country: data.country,\r\n      streetAddress: data.streetAddress,\r\n      apartment: data.apartment,\r\n      city: data.city,\r\n      state: data.state,\r\n      phone: data.phone,\r\n      email: data.email,\r\n    };\r\n    const shippingAddress = {\r\n      firstName: data.shippingFirstName,\r\n      lastName: data.shippingLastName,\r\n      companyName: data.shippingCompanyName,\r\n      country: data.shippingCountry,\r\n      streetAddress: data.shippingStreetAddress,\r\n      apartment: data.shippingApartment,\r\n      city: data.shippingCity,\r\n      district: data.shippingDistrict,\r\n      postalCode: data.shippingPostalCode,\r\n      orderNotes: data.shippingOrderNotes,\r\n    };\r\n    const formData = {\r\n      billingDetails,\r\n      shippingAddress,\r\n    };\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const { status } = await mutateAsync({\r\n        path: \"/user/address-book/add\",\r\n        formData: formData,\r\n      });\r\n      if (status === 204) {\r\n        toast.success(\"Update successfully.\");\r\n        reset();\r\n      }\r\n    } catch (error) {\r\n      if (error.response) {\r\n        toast.error(\"Response : \" + error.response.data.message);\r\n      } else if (error.request) {\r\n        toast.error(\"Request : \" + error.message);\r\n      } else {\r\n        toast.error(\"Error :\", error.message);\r\n      }\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"mt-5 grid grid-cols-1 gap-8 lg:grid-cols-2\">\r\n        <BillingDetails register={register} errors={errors} />\r\n        <ShippingAddress register={register} errors={errors} show={true} />\r\n      </div>\r\n      <SecondaryButton btnText=\"SAVE\" type=\"submit\" disabled={submitting} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserAddressForm;\r\n","import React from \"react\";\r\nimport Error from \"../../components/Error\";\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport { HashLoading } from \"../../components/Loading\";\r\nimport { useGetData } from \"../../hooks/dataApi\";\r\nimport Menubar from \"../Menubar\";\r\nimport UserAddressForm from \"./UserAddressForm\";\r\n\r\nconst UserAddress = () => {\r\n  const {\r\n    data: list,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n  } = useGetData(\"userAddress\", \"/user-address-book\");\r\n\r\n  if (isLoading)\r\n    return (\r\n      <Layout>\r\n        <HashLoading />\r\n      </Layout>\r\n    );\r\n\r\n  if (isError)\r\n    return (\r\n      <Layout>\r\n        <Error message={error.message} />\r\n      </Layout>\r\n    );\r\n\r\n  const { billingDetails, shippingAddress } = list.data;\r\n  const defaultValues = {\r\n    firstName: billingDetails.firstName,\r\n    lastName: billingDetails.lastName,\r\n    companyName: billingDetails.companyName,\r\n    country: billingDetails.country,\r\n    streetAddress: billingDetails.streetAddress,\r\n    apartment: billingDetails.apartment,\r\n    city: billingDetails.city,\r\n    state: billingDetails.state,\r\n    phone: billingDetails.phone,\r\n    email: billingDetails.email,\r\n\r\n    shippingFirstName: shippingAddress.firstName,\r\n    shippingLastName: shippingAddress.lastName,\r\n    shippingCompanyName: shippingAddress.companyName,\r\n    shippingCountry: shippingAddress.country,\r\n    shippingStreetAddress: shippingAddress.streetAddress,\r\n    shippingApartment: shippingAddress.apartment,\r\n    shippingCity: shippingAddress.city,\r\n    shippingDistrict: shippingAddress.district,\r\n    shippingPostalCode: shippingAddress.postalCode,\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"grid gap-4 lg:grid-cols-6\">\r\n        <Menubar />\r\n        <div className=\"card w-full max-w-screen-xl lg:col-span-5\">\r\n          <h1 className=\"text-2xl font-medium\">My Address</h1>\r\n          <UserAddressForm defaultValues={defaultValues} />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default UserAddress;\r\n"],"sourceRoot":""}